--1. Lấy danh sách tài khoản tiết kiệm của các khách hàng tại các chi nhánh có địa chỉ ở Tp. Hồ Chí Minh;
SELECT SA.CUSTID, SA.SAVING_ACC_ID, CTY.CITY_NAME from SAVING_ACCOUNT SA
INNER JOIN CUSTOMER C ON C.CUSTID = SA.CUSTID
INNER JOIN CODE_BRANCH CB ON C.BRANCH_CODE = CB.BRANCH_CODE --CẦN THÊM NÀY MỚI LÀ NỐI ĐỂ BIẾT CHI NHÁNH Ở TP.HCM
INNER JOIN CODE_CITY CTY ON CB.CITY_CODE = CTY.CITY_CODE
WHERE CTY.CITY_NAME = 'HO CHI MINH'

--2. Lấy danh sách các khoản tiết kiệm đã hết hạn trước năm 2025.
SELECT SA.CUSTID, SA.SAVING_ACC_ID, SA.SAVE_END_DATE from SAVING_ACCOUNT SA
INNER JOIN CUSTOMER C ON C.CUSTID = SA.CUSTID
WHERE YEAR(SA.SAVE_END_DATE) < 2025

--3. Lấy danh sách các khoản tiết kiệm sẽ hết hạn trong năm 2025.
SELECT SA.CUSTID, SA.SAVING_ACC_ID, SA.SAVE_END_DATE FROM SAVING_ACCOUNT SA
INNER JOIN CUSTOMER C ON C.CUSTID = SA.CUSTID
WHERE YEAR(SA.SAVE_END_DATE) = 2025

--4. Lấy danh sách các khoản tiết kiệm của khu vực Hội sở chính
SELECT 
	SA.CUSTID, 
    C.CUSTNAME, 
    SA.SAVING_ACC_ID, 
    CB.BRANCH_NAME, 
    CA.AREA_NAME, 
    SA.SAVE_END_DATE  
FROM SAVING_ACCOUNT SA
INNER JOIN CUSTOMER C ON SA.CUSTID = C.CUSTID
INNER JOIN CODE_BRANCH CB ON C.BRANCH_CODE = CB.BRANCH_CODE
INNER JOIN CODE_AREA CA ON CB.AREA_CODE = CA.AREA_CODE
WHERE CA.AREA_NAME = 'HOI SO CHINH'

--5. Lấy danh sách khách hàng cá nhân và thêm tiêu chí đã từng gửi/chưa từng gửi tiết kiệm. (Câu này lưu ý)
SELECT C.CUSTID,C.CUSTNAME,CCT.CUST_TYPE_NAME,
CASE 
    WHEN SA.CUSTID IS NULL THEN N'CHƯA GỬI'
    ELSE N'ĐÃ GỬI'
END AS SAVING_STATUS
FROM CUSTOMER C
INNER JOIN CODE_CUST_TYPE CCT ON C.CUST_TYPE_CODE = CCT.CUST_TYPE_CODE
LEFT JOIN SAVING_ACCOUNT SA ON C.CUSTID = SA.CUSTID
WHERE C.CUST_TYPE_CODE = 'CN'
GROUP BY C.CUSTID, C.CUSTNAME, CCT.CUST_TYPE_NAME, SA.CUSTID

--6. Tính tổng số tiền và đếm số khoản tiết kiệm theo mỗi khu vực trong Quý I năm 2024.
SELECT CA.AREA_NAME, CA.AREA_CODE, COUNT(SA.SAVING_ACC_ID) AS [SỐ LƯỢNG TÀI KHOẢN TK], SUM(SA.SAV_AMOUNT) AS [TỔNG SỐ TIỀN] FROM CUSTOMER C
INNER JOIN SAVING_ACCOUNT SA ON C.CUSTID = SA.CUSTID
INNER JOIN CODE_BRANCH CB ON C.BRANCH_CODE = CB.BRANCH_CODE
INNER JOIN CODE_AREA CA ON CB.AREA_CODE = CA.AREA_CODE
WHERE SA.SAVE_DATE >= '2024-01-01' AND SA.SAVE_DATE < '2024-04-01'
GROUP BY CA.AREA_NAME, CA.AREA_CODE
HAVING SUM(SA.SAV_AMOUNT)>0

--7. 2 Khu vực nào có nhiều tài khoản tiết kiệm mở mới nhất trong năm 2024? --LƯU Ý CÂU NÀY KHÁ KHÓ
SELECT TOP(2) CA.AREA_NAME, CA.AREA_CODE, COUNT(SA.SAVING_ACC_ID) AS [SỐ LƯỢNG TK MỞ] FROM CUSTOMER C
INNER JOIN SAVING_ACCOUNT SA ON C.CUSTID = SA.CUSTID
INNER JOIN CODE_BRANCH CB ON C.BRANCH_CODE = CB.BRANCH_CODE
INNER JOIN CODE_AREA CA ON CB.AREA_CODE = CA.AREA_CODE
WHERE SA.SAVE_DATE BETWEEN '2024-01-01' AND '2024-12-31'
GROUP BY CA.AREA_NAME, CA.AREA_CODE
ORDER BY COUNT(SA.SAVING_ACC_ID) DESC

--8. Tính tổng số tiền huy động theo các chi nhánh trong năm 2024.
SELECT CB.BRANCH_CODE,CB.BRANCH_NAME,CB.BRANCH_ADDRESS, SUM(SA.SAV_AMOUNT) AS [TỔNG TIỀN HUY ĐỘNG] FROM CUSTOMER C -- HAY CÒN LÀ TỔNG TIỀN GỬI TK
INNER JOIN SAVING_ACCOUNT SA ON C.CUSTID = SA.CUSTID
INNER JOIN CODE_BRANCH CB ON C.BRANCH_CODE = CB.BRANCH_CODE
WHERE SA.SAVE_DATE BETWEEN '2024-01-01' AND '2024-12-31'
GROUP BY CB.BRANCH_CODE, BRANCH_NAME, BRANCH_ADDRESS
HAVING SUM(SA.SAV_AMOUNT)>0

--9. Tính tổng số tiền lãi ngân hàng cần trả cho khách hàng trong 2025.
-- TÍNH THEO DAY: DATEDIFF(DAY, SA.SAVE_DATE, SA.SAVE_END_DATE) / 360.0
SELECT SA.CUSTID, C.CUSTNAME, SUM(SA.SAV_AMOUNT * SA.INTEREST * DATEDIFF(MONTH, SA.SAVE_DATE, SA.SAVE_END_DATE) / 12.0) AS [TỔNG LÃI]
FROM CUSTOMER C
INNER JOIN SAVING_ACCOUNT SA ON C.CUSTID = SA.CUSTID
WHERE YEAR(SA.SAVE_END_DATE) = 2025 AND SA.SAV_STATUS = 0
GROUP BY SA.CUSTID,C.CUSTNAME
HAVING SUM(SA.SAV_AMOUNT * SA.INTEREST * DATEDIFF(MONTH, SA.SAVE_DATE, SA.SAVE_END_DATE) / 12.0) > 0

--10. Tính tổng số tiền lãi ngân hàng đã trả cho khách hàng trong hai quý đầu năm 2024.
SELECT SA.CUSTID, C.CUSTNAME, SUM(SA.SAV_AMOUNT * SA.INTEREST * DATEDIFF(MONTH, SA.SAVE_DATE, SA.SAVE_END_DATE) / 12.0) AS [TỔNG LÃI]
FROM CUSTOMER C
INNER JOIN SAVING_ACCOUNT SA ON C.CUSTID = SA.CUSTID
WHERE SA.SAVE_END_DATE BETWEEN '2024-01-01' AND '2024-06-30' AND SA.SAV_STATUS = 1
GROUP BY SA.CUSTID,C.CUSTNAME 
HAVING SUM(SA.SAV_AMOUNT * SA.INTEREST * DATEDIFF(MONTH, SA.SAVE_DATE, SA.SAVE_END_DATE) / 12.0) > 0

--11. Tính số tiền lãi, ngân hàng đã trả cho khách hàng gửi tiết kiệm trong năm 2024. (LÀ NGÂN HÀNG TRẢ LÃI TRONG NĂM 2024)
SELECT SA.CUSTID, C.CUSTNAME, (SA.SAV_AMOUNT * SA.INTEREST * DATEDIFF(MONTH, SA.SAVE_DATE, SA.SAVE_END_DATE) / 12.0) AS [SỐ TIỀN LÃI]
FROM CUSTOMER C
INNER JOIN SAVING_ACCOUNT SA ON C.CUSTID = SA.CUSTID
WHERE YEAR(SA.SAVE_END_DATE) = 2024 AND SA.SAV_STATUS = 1 AND (SA.SAV_AMOUNT * SA.INTEREST * DATEDIFF(MONTH, SA.SAVE_DATE, SA.SAVE_END_DATE) / 12.0) > 0

--12. Chi nhánh nào có quy mô tiền gửi tiết kiệm lớn nhất trong quý I năm 2024 toàn hệ thống. (quy mô tiền gửi tiết kiệm là tổng số tiền khách đã gửi).

WITH CTE AS(
	SELECT RANK() OVER (ORDER BY SUM(SA.SAV_AMOUNT)) AS [RANK],
	CB.BRANCH_CODE, CB.BRANCH_NAME, SUM(SA.SAV_AMOUNT) AS [TIỀN GỬI TK] 
	FROM CUSTOMER C
	INNER JOIN SAVING_ACCOUNT SA ON C.CUSTID = SA.CUSTID
	INNER JOIN CODE_BRANCH CB ON C.BRANCH_CODE = CB.BRANCH_CODE
	WHERE DATEPART(QUARTER,SA.SAVE_DATE) = 1 AND YEAR(SA.SAVE_DATE) = 2024
	GROUP BY CB.BRANCH_NAME, CB.BRANCH_CODE
)
SELECT * FROM CTE
WHERE [RANK] <=2

--13. Thời hạn nào được khách hàng gửi tiết kiệm nhiều nhất trong các năm qua.
--- 100 khoản gửi tích kiệm 70 khoản chọn 1 năm/ 10-2 năm/ 20 khoản: 6 tháng
WITH CTE AS(
	SELECT RANK() OVER (ORDER BY COUNT(*) DESC) AS [STT],
	DATEDIFF(MONTH, SA.SAVE_DATE, SA.SAVE_END_DATE) AS [THỜI HẠN (THÁNG)], COUNT(*) AS NUM_OF_ACC,
	SUM(SA.SAV_AMOUNT) AS [TỔNG TIỀN GỬI]
	FROM SAVING_ACCOUNT SA
	GROUP BY DATEDIFF(MONTH, SA.SAVE_DATE, SA.SAVE_END_DATE)
)
SELECT * FROM CTE
WHERE [STT] = 1

--14. Có bao nhiêu khoản vay tự động gia hạn trong giai đoạn từ 1/2023 đến 6/2024?
SELECT COUNT(*) AS [SỐ KHOẢN VAY GIA HẠN TỰ ĐỘNG] FROM CUSTOMER C
INNER JOIN SAVING_ACCOUNT SA ON C.CUSTID = SA.CUSTID
WHERE (SA.SAVE_DATE BETWEEN '2023-01-01' AND '2024-06-30') AND SA.AUTO_EXTEND = 1

--15 Tính tổng số tiền tiết kiệm trong năm 2024 theo độ tuổi của khách gửi theo 03 nhóm: dưới 25; từ 25-30; trên 30.
SELECT 
  CASE 
    WHEN DATEDIFF(YEAR, C.DATE_OF_BIRTH, '2024-01-01') < 25 THEN N'Dưới 25'
    WHEN DATEDIFF(YEAR, C.DATE_OF_BIRTH, '2024-01-01') BETWEEN 25 AND 30 THEN N'25-30'
    ELSE N'Trên 30'
  END AS [NHÓM TUỔI],
  SUM(SA.SAV_AMOUNT) AS [TỔNG TIỀN TIẾT KIỆM]
FROM CUSTOMER C
INNER JOIN SAVING_ACCOUNT SA ON C.CUSTID = SA.CUSTID
WHERE YEAR(SA.SAVE_DATE) = 2024 
GROUP BY 
  CASE 
    WHEN DATEDIFF(YEAR, C.DATE_OF_BIRTH, '2024-01-01') < 25 THEN N'Dưới 25'
    WHEN DATEDIFF(YEAR, C.DATE_OF_BIRTH, '2024-01-01') BETWEEN 25 AND 30 THEN N'25-30'
    ELSE N'Trên 30'
  END

--16. Tìm lãi suất tiết kiệm cao nhất và thấp nhất theo các quý trong giai đoạn 2022-nay.
SELECT DATEPART(YEAR,SAVE_DATE) [NĂM],
DATEPART(QUARTER,SAVE_DATE) [QUÝ],
MAX(INTEREST) [LÃI SUẤT CAO NHẤT],
MIN(INTEREST) [LÃI SUẤT THẤP NHẤT]
FROM SAVING_ACCOUNT
WHERE YEAR(SAVE_DATE) >= 2022
GROUP BY DATEPART(YEAR,SAVE_DATE),DATEPART(QUARTER,SAVE_DATE)















